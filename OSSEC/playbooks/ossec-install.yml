---
- name: Install and configure OSSEC on Ubuntu
  hosts: all
  become: yes
  vars:
    ossec_version: "3.7.0"
    ossec_tarball: "ossec-hids-{{ ossec_version }}.tar.gz"
    ossec_url: "https://github.com/ossec/ossec-hids/archive/{{ ossec_version }}.tar.gz"
    ossec_dir: "ossec-hids-{{ ossec_version }}"

  tasks:
    - name: Update and upgrade system
      apt:
        update_cache: yes
        upgrade: dist

    - name: Add repository for legacy PHP
      apt:
        name: software-properties-common
        state: present

    - name: Add Ondrej PHP PPA
      apt_repository:
        repo: ppa:ondrej/php
        state: present

    - name: Install required packages
      apt:
        name:
          - build-essential
          - gcc
          - make
          - apache2
          - libapache2-mod-php7.0
          - php7.0
          - php7.0-cli
          - php7.0-common
          - apache2-utils
          - unzip
          - wget
          - sendmail
          - inotify-tools
          - libevent-dev
          - zlib1g-dev
          - libssl-dev
          - libpcre2-dev
          - libsystemd-dev
          - expect
        state: present

    - name: Ensure /opt/ directory exists
      file:
        path: /opt
        state: directory
        mode: '0755'

    - name: Download OSSEC tarball
      get_url:
        url: "https://github.com/ossec/ossec-hids/archive/refs/tags/{{ ossec_version }}.tar.gz"
        dest: /opt/ossec.tar.gz

    - name: Extract OSSEC tarball
      unarchive:
        src: /opt/ossec.tar.gz
        dest: /opt/
        remote_src: yes

    - name: Copy interactive expect script for OSSEC install
      copy:
        dest: /opt/install_ossec.expect
        mode: '0755'
        content: |
          #!/usr/bin/expect -f
          set timeout 600
          cd /opt/ossec-hids-3.7.0
          spawn ./install.sh
          expect "en]:"
          send "en\r"
          expect "Press ENTER to continue"
          send "\r"
          expect "What kind of installation"
          send "local\r"
          expect "Choose where to install"
          send "\r"
          expect "Do you want e-mail notification"
          send "y\r"
          expect "What's your e-mail address"
          send "root@localhost\r"
          expect "Do you want to use it"
          send "y\r"
          expect "Do you want to run the integrity check daemon"
          send "y\r"
          expect "Do you want to run the rootkit detection engine"
          send "y\r"
          expect "Do you want to enable active response"
          send "y\r"
          expect "Do you want to enable the firewall-drop response"
          send "y\r"
          expect "Do you want to add more IPs to the white list"
          send "n\r"
          expect "--- Press ENTER to continue ---"
          send "\r"
          expect "---  Press ENTER to finish ---"
          send "\r"
          expect eof

    - name: Run OSSEC install.sh using expect
      command: /opt/install_ossec.expect
      register: ossec_install_output

    - name: Show install result
      debug:
        var: ossec_install_output.stdout_lines

    - name: Start OSSEC service
      command: /var/ossec/bin/ossec-control start

    - name: Check if OSSEC is running
      shell: /var/ossec/bin/ossec-control status
      register: ossec_status
      changed_when: false

    - name: Print OSSEC status
      debug:
        var: ossec_status.stdout_lines
