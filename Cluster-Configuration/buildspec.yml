version: 0.2

env:
  variables:
    S3_BUCKET: "splunk-deployment-test"
    EMAIL: "$EMAIL"  # Passed from Lambda response
    # These would be passed from Lambda response via environment variables
    INVENTORY_S3_PATH: "$INVENTORY_S3_PATH"
    GROUP_VARS_S3_PATH: "$GROUP_VARS_S3_PATH"
    KEY_FILES: "$KEY_FILES"  # Space-separated list of key filenames

cache:
  paths:
    - /root/terraform_cache/**/*
    - /root/.ansible_cache/**/*

phases:
  install:
    commands:
      - cd Cluster-Configuration
      - echo Installing Ansible, and boto3...
      - mkdir -p /root/terraform_cache /root/.ansible_cache
      - if ! ansible --version > /dev/null 2>&1; then
          echo "Installing Ansible..." &&
          yum install -y unzip wget ansible;
        else
          echo "Ansible already installed.";
        fi
      - ansible --version

      # âœ… Install boto3 for Python
      - echo "Installing boto3..."
      - pip3 install boto3

      # Create necessary directories
      - mkdir -p /root/.ssh
      - mkdir -p group_vars
      
      # Download keys
      - for key in $KEY_FILES; do
          aws s3 cp s3://$S3_BUCKET/clients/$EMAIL/keys/$key /root/.ssh/$key;
          chmod 600 /root/.ssh/$key;
        done
      
      # Download inventory files
      - aws s3 cp $INVENTORY_S3_PATH ./inventory.ini
      - aws s3 cp $GROUP_VARS_S3_PATH ./group_vars/all.yml

  build:
    commands:
      - ansible-playbook -i inventory.ini site.yml