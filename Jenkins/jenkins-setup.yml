---
- name: Wait for instance to fully boot
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Pause for 10 seconds
      ansible.builtin.pause:
        seconds: 10

- name: Jenkins Installation on RHEL 8/9 (Production Ready)
  hosts: jenkins
  become: yes
  vars_files:
    - group_vars/all.yml

  tasks:
    - name: Ensure required packages are installed (Java, fontconfig, wget)
      yum:
        name:
          - java-21-openjdk
          - fontconfig
          - wget
        state: present

    - name: Add Jenkins repo
      get_url:
        url: "https://pkg.jenkins.io/redhat-stable/jenkins.repo"
        dest: /etc/yum.repos.d/jenkins.repo
        mode: '0644'

    - name: Import Jenkins GPG key
      rpm_key:
        key: "https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key"
        state: present

    - name: Install Jenkins
      yum:
        name: jenkins
        state: present

    - name: Enable Jenkins service at boot
      systemd:
        name: jenkins
        enabled: yes

    - name: Start Jenkins service
      systemd:
        name: jenkins
        state: started

    - name: Wait for Jenkins to create initial password file
      wait_for:
        path: /var/lib/jenkins/secrets/initialAdminPassword
        state: present
        delay: 5
        timeout: 120

    - name: Ensure Jenkins service is started
      systemd:
        name: jenkins
        state: started

    - name: Ensure init.groovy.d directory exists
      file:
        path: /var/lib/jenkins/init.groovy.d
        state: directory
        owner: jenkins
        group: jenkins
        mode: '0755'

    - name: Disable Jenkins setup wizard and create admin user
      copy:
        dest: /var/lib/jenkins/init.groovy.d/basic-security.groovy
        content: |
          import jenkins.model.*
          import hudson.security.*

          def instance = Jenkins.getInstance()
          def hudsonRealm = new HudsonPrivateSecurityRealm(false)
          hudsonRealm.createAccount("{{ jenkins_admin_user }}", "{{ jenkins_admin_password }}")
          instance.setSecurityRealm(hudsonRealm)

          def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
          strategy.setAllowAnonymousRead(false)
          instance.setAuthorizationStrategy(strategy)
          instance.save()
      notify: Restart Jenkins

    - name: Check if firewalld is running
      systemd:
        name: firewalld
      register: firewalld_status
      ignore_errors: true

    - name: Open Jenkins port in firewalld if firewalld is running
      firewalld:
        port: "{{ jenkins_http_port }}/tcp"
        permanent: yes
        state: enabled
        immediate: yes
      when: firewalld_status.status.ActiveState == "active"
      ignore_errors: true

  handlers:
    - name: Restart Jenkins
      systemd:
        name: jenkins
        state: restarted